tasks:
- check code for performance improvement for multiple cpu cores
    - problem: multi thread not faster than single cpu, why?
    - idea: make test case where 2 citizens start at different locations which and make one thread do one side completly
        - compare single cpu to multi thread. So best case scenario two check what can be achieved. Maybe there is another bottleneck

    - differnt idea: assign chunk rectangle areas to threads

    - check how to idle threads, should not use 100% cpu time when idle,

    - update code for multi thread 
        - activeChunkKeys
        - citizenCounter: u32 = 0,
        - citizenCounterLastTick: u32 = 0,
        - citizensPerMinuteCounter: f32 = 0,            
    - vulkan data setup. Can it also be split to multiple cpus?



- bug: deleting can crash game
    - integer overflow, D:\mein\github_gamedev\Zig_ChatSim\src\citizen.zig:356:31: 0x7ff7f71f682c in buildingFinished (zig.exe.obj),  building.woodRequired -= 1;
- delete test simd branch?


- features:
    - performance            
        - check code for performance improvement for multiple cpu cores
        - performance of hashMap varies a lot. at some points goes below 30 fps and at other cpu is only at 17%
        - arena allocator (buggy)?
    - save game progress?
    - put on steam

  
Some data:
- FPS: 147, citizens: 33907, gameTime: 341472, end FPS: 91.29745 (16.05.2025)
- ~102_000 citizen my cpu can not keep 60fps anymore(while streamng + debug mode)
- FPS: 143, citizens: 33112, gameTime: 338112, end FPS: 90.19086 (pathfinding code change for multi thread -> graph data)
- FPS: 143, citizens: 33064, gameTime: 337904, end FPS: 89.50953 (pathfinding -> temp data)
- FPS: 121, citizens: 26536, gameTime: 316928, end FPS: 102.67611 (multi thread v1)
- FPS: 129, citizens: 28759, gameTime: 324768, end FPS: 105.86641 (multi thread distance 2)
- FPS: 127, citizens: 28328, gameTime: 322384, end FPS: 95.96992 (multi thread distance 3)
- FPS: 134, citizens: 30135, gameTime: 328736, end FPS: 105.05234 (multi thread distance 3 + main thread yield)
- FPS: 149, citizens: 34337, gameTime: 343456, end FPS: 93.454384 (multi thread distance 3 + main thread does work)
- FPS: 149, citizens: 34328, gameTime: 343424, end FPS: 94.42623 (multi thread distance 2 + main thread does work)

- FPS: 141, citizens: 36124, gameTime: 336208, end FPS: 82.15755 (test build distnace 15, VALIDATION_CHUNK_DISTANCE = 9m single cpu)
- FPS: 125, citizens: 30245, gameTime: 320176, end FPS: 79.98819 (distance 15, VALIDATION_CHUNK_DISTANCE = 5 , split: 420, 120)
- FPS: 132, citizens: 32875, gameTime: 327440, end FPS: 81.14966 (removed thread.yield, distance 15, VALIDATION_CHUNK_DISTANCE = 5 , split: 420, 120)
- FPS: 139, citizens: 35314, gameTime: 333552, end FPS: 79.64963 (single core using multithread code)
- FPS: 135, citizens: 33672, gameTime: 329744, end FPS: 82.06653 (count up earlier when placeholder)
- FPS: 133, citizens: 33363, gameTime: 328320, end FPS: 84.23951
- FPS: 135, citizens: 33651, gameTime: 329984, end FPS: 85.55455

new test case: two areas far apart
- FPS: 117, citizens: 37978, gameTime: 312592, end FPS: 88.12497 (current multi thread code)

Goal:
- a game which should not take more than 6month to make. Maybe publish to steam.
- performance should matter
- game idea:
    - city builder extreme fast
    - i have citizens. Each citizen just needs a home and food
        - citizens can be chatters
    - i as the player can:
        - place building orders: 
            - houses for citizens to live in
            - tree farm: citizens can become lumberjacks to gather wood and cut it. Required for building houses
            - farm: citizens can become farmers to plant food. Required for not starving
            - citizens must build these and gather resources for it
            - storage area. Used for storing food and wood
            - upgrade building:
                - bigger house: more people can live in it
    - citizens will automatically join if houses with space exit
    - game start with one small house and one citizen (the player) and storage area with some food and wood
    - game loop:
        - build more houses -> get more citizens
        - more citizen need more food -> build more or bigger farms
        - more citizens -> can build more faster
        - scale town up to what the PC can handle
            -> code performance matters
            -> expectations with my pc: 10_000 citizens and 60fp should be easy
                -> expectations which i guess should be possible: 100_000 citizens and 60fps

